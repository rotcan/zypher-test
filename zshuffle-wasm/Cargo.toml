[package]
name = "zshuffle-wasm"
description = "WASM SDK for encrypt and shuffle cards"
version.workspace = true
edition.workspace = true
#authors.workspace = true
#homepage.workspace = true
#repository.workspace = true
#categories.workspace = true
#license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
zshuffle = {path="../shuffle"}
uzkge = { workspace = true, features = ["shuffle"] }

ark-ec.workspace = true
ark-ff.workspace = true
ark-std.workspace = true
ark-serialize.workspace = true
ark-bn254.workspace = true
ark-ed-on-bn254.workspace = true
bincode.workspace = true
#getrandom.workspace = true
hex.workspace = true
#num-bigint.workspace = true
once_cell.workspace = true
#rand_core = { workspace = true, features = ["getrandom"] }
rand_chacha.workspace = true
serde.workspace = true
#serde_bytes.workspace = true
#serde-wasm-bindgen.workspace = true
thiserror.workspace = true
console_error_panic_hook = {version="0.1.7",optional=true}
#wasm-bindgen.workspace = true
getrandom = {version="0.2.15",features = ["js"] }
num-bigint = "0.4.6"
rand_core = {version="0.6.4", features = ["getrandom"] }
serde-wasm-bindgen = {workspace=true}
serde_bytes = "0.11.15"
wasm-bindgen.workspace=true 

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
#console_error_panic_hook = { workspace = true, optional = true }

[dev-dependencies]
serde_json = "1.0.127"
wasm-bindgen-test = "=0.3.42"
web-sys = {version="=0.3.69", features = ["console"]}

#wasm-bindgen-test.workspace = true
#web-sys.workspace = true